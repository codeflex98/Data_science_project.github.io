---
title: "Replication of working paper"
author:
- "Name: Manvanth Sunadreshan"
- "Email: Sudareshan.manvanth@stud.hs-fresenius.de"
- "Matriulation number: 400353080"
date: "Last compiled on `r format(Sys.time(), '%d %B, %Y')`"
output:
  html_document:
    theme: darkly
    toc: true
    toc_float: true
    toc_depth: 3
bibliography: citation.bib
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Abstract {.unnumbered}

The paper discusses the critical role of Historically Black Colleges and Universities (HBCUs) in enhancing educational outcomes for Black students. It highlights how HBCUs, despite facing financial constraints, have consistently supported student success through tailored academic programs, supportive learning environments, and active alumni involvement. The authors emphasize that these institutions effectively serve socioeconomically disadvantaged students, fostering higher graduation rates and upward mobility compared to other colleges. They suggest that lessons from HBCUs can inform broader higher education practices, advocating for increased financial investments and institutional backing to sustain their positive impact (@10.1257/jep.37.3.213) .

## Overview of R markdown{.unnumbered}

R Markdown provides an authoring framework for data science. You can use a single R Markdown file to both,
- Save and execute code
- Generate high quality reports that can be shared with an audience

## loading the necessary libraries {.unnumbered}

- Loading necessary libraries using and if else function to remove the necessity of reinstalling and already installed package and reduce run tie of the program.
- Before installing the packages we using "rm(list = ls())" to clear the environment to have a fresh start.
- Tidyverse, haven, dplyr, readxl, writexl, knitr,png are some of the pakages used to create this replication procedure. 

```{r, message=FALSE, warning=FALSE}

rm(list = ls()) # reset the environment

if (!require(tidyverse)) {
  install.packages("tidyverse")
  library(tidyverse)
} else {
  library(tidyverse)
}
# Install haven if required
if (!require(haven)) {
  install.packages("haven")
  library(haven)
} else {
  library(haven)
}
# Install dplyr if required
if (!require(dplyr)) {
  install.packages("dplyr")
  library(dplyr)
} else {
  library(dplyr)
}
#load the readxl package
if (!require(readxl)) {
  install.packages("readxl")
  library(readxl)
} else {
  library(readxl)
}
#load the writexl package
if (!require(writexl)) {
  install.packages("writexl")
  library(writexl)
} else {
  library(writexl)
}
#load the knitr package
if (!require(knitr)) {
  install.packages("knitr")
  library(knitr)
} else {
  library(knitr)
}
#load the png package
if (!require(png)) {
  install.packages("png")
  library(png)
} else {
  library(png)
}

```

## Code to generate Table 1 {.unnumbered}

- The README file provides insights on how to replicate Table 1 and points out that “MSI Data Project-03132023.xlsx” is required which is available in the Replication package.
- Filter the data to get all the top HBCU's and also the smaller HBCU's.
- Use KABLE to display table.

```{r}

table_1_data <- read_excel("D:/Hochschule Fresenius notes (sem2)/SS 2024- Data Science in business/Final_Project_2/P2_WD/Price_Viceisza_JEP_Mar2023.xlsx") #file path

# Select relevant columns
HBCU_filtered <- table_1_data |> 
  select(instname, stabbr, control, i_fte12mn, m_pell_pct, grate_black) |> 
  filter(!is.na(instname) & instname != "Institution name") #Removes rows with missing institution names or header rows.

required_enrollments <- c(11207, 9780, 9069, 9011, 8933, 7541, 7286, 6875, 
                          6568, 6283, 4510, 3276, 3133, 2296, 2261, 2173)

# Filter to the largest institutions by enrollment
HBCU_rearrage <- HBCU_filtered |> 
  filter(i_fte12mn %in% required_enrollments) |> # Filtering the HBCU's
  filter(!is.na(grate_black)) |> #drop any row with null values in grate_black colomn
  group_by(i_fte12mn) |> # process to add the smaller HBCU's
  filter(!(duplicated(i_fte12mn) & m_pell_pct == min(m_pell_pct))) |> 
  ungroup()

# Rename columns to generate the table names
HBCU_table_1 <- HBCU_rearrage |> 
  rename(
    Institution = instname,
    State = stabbr,
    Type = control,
    Enrollment = i_fte12mn,
    `Pell Percent` = m_pell_pct,
    `6-Year Black Graduation Rate` = grate_black
  )

kable(HBCU_table_1, 
      caption = "TABLE 1 : 2021 Characteristics for Selected Four-Year Historically Black Colleges and Universities", 
      format = "html", 
      align = "l",n=19)
```
## Code to generate Table 2 {.unnumbered}

- For generating table 2 we must generate two sheets called “AveragesMediansPercents_2003” and 
“AveragesMediansPercents_2008” in the file called 
Price_Viceisza_JEP_Mar2023.xlsx. as instructed by the README file.
- This file is also avilable in the replication package and page called "Table 2" can be used for replication of table 2.

```{r, message=FALSE, warning=FALSE}
file_path <- "D:/Hochschule Fresenius notes (sem2)/SS 2024- Data Science in business/Final_Project_2/P2_WD/Price_Viceisza_JEP_Mar2023.xlsx"
table2_data <- read_excel(file_path, sheet = "Table 2")
view(table2_data)

kable(table2_data, 
      caption = "TABLE 2 : A Selection of Average Black Student Outcomes across Historically 
Black Institutions and Non-HBCUs", 
      format = "html", 
      align = "l",n=19,col.names = NULL)


```
## Code to generate Table 3 {.unnumbered}

_ No clear instructions were provided bt however it contains the datasheet in the xlsx file "Price_Viceisza_JEP_Mar2023.xlsx ".
- This page ("Table 3 (Gallup Report Page 18)") can be used to replicate Table 3. 

```{r, message=FALSE, warning=FALSE}

file_path <- "D:/Hochschule Fresenius notes (sem2)/SS 2024- Data Science in business/Final_Project_2/P2_WD/Price_Viceisza_JEP_Mar2023.xlsx"
table2_data <- read_excel(file_path, sheet = "Table 3 (Gallup Report Page 18)")
view(table2_data)

kable(table2_data, 
      caption = "TABLE 3 : Black Graduates: Support and Experiential Learning Opportunities", 
      format = "html", 
      align = "l",n=19,col.names = NULL)

```

## Challenges faced {.unnumbered}

- Table 1 has clear instructions on how to replicate it but table 2 and 3 do not contain proper replication instructions to conduct replication.

## Problems and troubleshooting {.unnumbered}

- After coding enrollments in descending the 1st value is going at the end of the table (solved it by removing the "desec()" command that was arranging call).
- Unable to properly filter the university names with enrollment 2296, 2261, and 2173. As a result there is 19 observations instead of 16 (Problem that's yet to be solved).
- Unable to remove the margins for inserted PNG image (Problem that's yet to be solved).
```{r, echo=FALSE, message=FALSE, warning=FALSE}

img_png <- readPNG("D:/Hochschule Fresenius notes (sem2)/SS 2024- Data Science in business/Final_project_2/Table1_Final_Filtration_failure.png")
plot(2:1, type="n", xlab="", ylab="", axes=FALSE,asp=0.3) 
rasterImage(img_png, 0.95, 0.95, 2.05, 2.05)
```

## Future improvements/ Pending work {.unnumbered}

- Adding missing inline comments.
- Improving the formatting of the tables and remove the displaying NA values and provide clear headers for the tables.

## References {.unnumbered}
